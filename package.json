{
  "name": "hypercosi",
  "productName": "HyperCoSi",
  "version": "0.0.1",
  "description": "Hyperion Config and Simulation Toolkit",
  "scripts": {
    "build": "concurrently \"yarn build-main\" \"yarn build-renderer\"",
    "build-dll": "cross-env NODE_ENV=development webpack --config ./configs/webpack.config.renderer.dev.dll.babel.js --colors",
    "build-e2e": "cross-env E2E_BUILD=true yarn build",
    "build-main": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.main.prod.babel.js --colors",
    "build-renderer": "cross-env NODE_ENV=production webpack --config ./configs/webpack.config.renderer.prod.babel.js --colors",
    "change-dist-path": "ELECTRON_OVERRIDE_DIST_PATH=./altDist",
    "dev": "cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 yarn start-renderer-dev",
    "deploy": "./internals/scripts/deployment.sh",
    "environmental-log-node": "export NODE_OPTIONS='--no-warnings --max-old-space-size=2048' && export ELECTRON_ENABLE_LOGGING=true",
    "flow": "flow",
    "flow-typed": "rimraf flow-typed/npm && flow-typed update || true",
    "lint": "cross-env NODE_ENV=development eslint --cache --format=pretty .",
    "lint-fix": "yarn --silent lint --fix; exit 0",
    "lint-styles": "stylelint --ignore-path .eslintignore '**/*.*(css|scss)' --syntax scss",
    "lint-styles-fix": "yarn --silent lint-styles --fix; exit 0",
    "package": "yarn build && electron-builder build --publish never",
    "package-all": "yarn build && electron-builder build -mwl",
    "package-ci": "yarn postinstall && yarn build && electron-builder --publish always",
    "package-linux": "yarn build && electron-builder build --linux",
    "package-win": "yarn build && electron-builder build --win --x64",
    "package-mac": "yarn build && electron-builder build --mac",
    "postinstall": "yarn flow-typed && electron-builder install-app-deps package.json && yarn build-dll && opencollective-postinstall && ./node_modules/.bin/electron-rebuild",
    "postlint-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{js,jsx,json,html,css,less,scss,yml}'",
    "postlint-styles-fix": "prettier --ignore-path .eslintignore --single-quote --write '**/*.{css,scss}'",
    "preinstall": "node ./internals/scripts/CheckYarn.js",
    "prestart": "yarn build",
    "start": "cross-env NODE_ENV=production electron ./app/main.prod.js",
    "start-main-dev": "cross-env REACT_APP_HOT=1 NODE_ENV=development electron -r @babel/register ./app/main.dev.js",
    "start-renderer-dev": "cross-env NODE_ENV=development webpack-dev-server --config configs/webpack.config.renderer.dev.babel.js",
    "test": "cross-env NODE_ENV=test BABEL_DISABLE_CACHE=1 jest",
    "test-all": "yarn lint && yarn flow && yarn build && yarn test && yarn build-e2e && yarn test-e2e",
    "test-e2e": "node -r @babel/register ./internals/scripts/CheckBuildsExist.js && cross-env NODE_ENV=test testcafe electron:./ ./test/e2e/HomePage.e2e.js",
    "test-e2e-live": "node -r @babel/register ./internals/scripts/CheckBuildsExist.js && cross-env NODE_ENV=test testcafe-live electron:./ ./test/e2e/HomePage.e2e.js",
    "test-watch": "yarn test --watch",
    "check-deps": "./internals/scripts/check-deps.sh",
    "icon-update": "./internals/scripts/generate-icons.sh",
    "tasks": "ntl -d -o",
    "version:minor": "version minor",
    "wtf": "./internals/scripts/wtf.sh",
    "storybook": "start-storybook -p 6006",
    "build-storybook": "build-storybook"
  },
  "ntl": {
    "runner": "yarn",
    "exclude": "build-*",
    "descriptions": {
      "dev": "Start in Dev Environment",
      "package": "Create dev packages",
      "start": "Start in Production Environment",
      "build": "Build main and renderer",
      "install": "Install depedencies",
      "lint": "Run linting-check on scripts",
      "lint-fix": "Try to fix linting-fails in scripts",
      "lint-styles": "Run linting-check on style",
      "lint-styles-fix": "Try to fix linting-fails in style",
      "check-deps": "Run audit over installed dependencies",
      "storybook": "Start Storybook",
      "build-storybook": "Build Storybook",
      "test": "Run all tests",
      "test-watch": "Run continous testsing",
      "icon-update": "I have created a new icon and want to start the converter",
      "package-all": "Create all packages",
      "wtf": "WTF - I need to throw away all autogenerated files and dependencies"
    }
  },
  "lint-staged": {
    "*.{js,jsx}": [
      "cross-env NODE_ENV=development eslint --cache --format=pretty",
      "git add"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc,stylelintrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write",
      "git add"
    ],
    "*.{css,scss}": [
      "stylelint --ignore-path .eslintignore --syntax scss --fix",
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ]
  },
  "main": "./app/main.prod.js",
  "build": {
    "productName": "hypercosi",
    "appId": "com.mommel.HyperCoSi",
    "files": [
      "app/dist/",
      "app/app.html",
      "app/main.prod.js",
      "app/main.prod.js.map",
      "package.json"
    ],
    "mac": {
      "category": "public.app-category.developer-tools",
      "icon": "./resources/icons/mac/icon.icns"
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "icon": "./icons/win/icon.ico",
      "target": [
        "nsis",
        "msi"
      ]
    },
    "linux": {
      "icon": "./icons/png/",
      "target": [
        "deb",
        "rpm",
        "snap",
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    },
    "publish": {
      "provider": "github",
      "owner": "mommel",
      "repo": "hypercosi",
      "private": false
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mommel/Hypercosi.git"
  },
  "author": {
    "name": "Mommel",
    "email": "hypercosi@gmail.com",
    "url": "https://github.com/Mommel"
  },
  "contributors": [
    {
      "name": "JuliaMWeber",
      "url": "https://github.com/JuliaMWeber"
    },
    {
      "name": "Krachkind",
      "url": "https://github.com/krachkind"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mommel/Hypercosi/issues"
  },
  "keywords": [
    "Hyperion",
    "config",
    "ambilight",
    "ws2812"
  ],
  "homepage": "https://github.com/mommel/Hypercosi#readme",
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json"
    ],
    "transform": {
      "^.+\\.jsx?$": "babel-jest"
    },
    "setupFiles": [
      "./internals/scripts/CheckBuildsExist.js"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.4.0",
    "@babel/plugin-proposal-class-properties": "^7.4.0",
    "@babel/plugin-proposal-decorators": "^7.4.0",
    "@babel/plugin-proposal-do-expressions": "^7.2.0",
    "@babel/plugin-proposal-export-default-from": "^7.2.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.2.0",
    "@babel/plugin-proposal-function-bind": "^7.2.0",
    "@babel/plugin-proposal-function-sent": "^7.2.0",
    "@babel/plugin-proposal-json-strings": "^7.2.0",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.2.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.2.0",
    "@babel/plugin-proposal-numeric-separator": "^7.2.0",
    "@babel/plugin-proposal-optional-chaining": "^7.2.0",
    "@babel/plugin-proposal-pipeline-operator": "^7.3.2",
    "@babel/plugin-proposal-throw-expressions": "^7.2.0",
    "@babel/plugin-syntax-dynamic-import": "^7.2.0",
    "@babel/plugin-syntax-import-meta": "^7.2.0",
    "@babel/plugin-transform-react-constant-elements": "^7.2.0",
    "@babel/plugin-transform-react-inline-elements": "^7.2.0",
    "@babel/preset-env": "^7.4.2",
    "@babel/preset-flow": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "@babel/register": "^7.4.0",
    "@storybook/addon-actions": "^5.2.5",
    "@storybook/addon-links": "^5.2.5",
    "@storybook/addons": "^5.2.5",
    "@storybook/react": "^5.2.5",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^24.5.0",
    "babel-loader": "^8.0.5",
    "babel-plugin-dev-expression": "^0.2.1",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "chalk": "^2.4.2",
    "concurrently": "^4.1.0",
    "cross-env": "^6.0.3",
    "cross-spawn": "^7.0.1",
    "css-loader": "^3.2.0",
    "detect-port": "^1.3.0",
    "electron": "^7.0.0",
    "electron-builder": "^21.2.0",
    "electron-devtools-installer": "^2.2.4",
    "electron-publish": "^22.1.0",
    "electron-rebuild": "^1.8.6",
    "enzyme": "^3.9.0",
    "enzyme-adapter-react-16": "^1.11.2",
    "enzyme-to-json": "^3.3.5",
    "eslint": "^6.5.1",
    "eslint-config-airbnb": "^18.0.1",
    "eslint-config-prettier": "^6.4.0",
    "eslint-formatter-pretty": "^2.1.1",
    "eslint-import-resolver-webpack": "^0.11.0",
    "eslint-plugin-compat": "^3.1.0",
    "eslint-plugin-flowtype": "^4.3.0",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-jest": "^22.4.1",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-prettier": "^3.1.1",
    "eslint-plugin-promise": "^4.1.1",
    "eslint-plugin-react": "^7.16.0",
    "eslint-plugin-testcafe": "^0.2.1",
    "fbjs-scripts": "^1.2.0",
    "file-loader": "^4.2.0",
    "flow-bin": "^0.110.1",
    "flow-runtime": "^0.17.0",
    "flow-typed": "^2.5.1",
    "husky": "^3.0.9",
    "identity-obj-proxy": "^3.0.0",
    "import-sort-style-module": "^6.0.0",
    "jest": "^24.5.0",
    "lint-staged": "^10.0.0-1",
    "mini-css-extract-plugin": "^0.8.0",
    "node-sass": "^4.11.0",
    "opencollective-postinstall": "^2.0.2",
    "optimize-css-assets-webpack-plugin": "^5.0.1",
    "prettier": "^1.16.4",
    "prettier-plugin-import-sort": "^0.0.3",
    "react-test-renderer": "^16.8.6",
    "redux-logger": "^3.0.6",
    "rimraf": "^3.0.0",
    "sass-loader": "^8.0.0",
    "sinon": "^7.3.1",
    "spectron": "^9.0.0",
    "style-loader": "^1.0.0",
    "stylelint": "^11.1.1",
    "stylelint-config-prettier": "^6.0.0",
    "stylelint-config-standard": "^19.0.0",
    "terser-webpack-plugin": "^2.2.1",
    "testcafe": "^1.1.0",
    "testcafe-browser-provider-electron": "^0.0.12",
    "testcafe-live": "^0.1.4",
    "testcafe-react-selectors": "^3.2.0",
    "url-loader": "^2.2.0",
    "webpack": "^4.29.6",
    "webpack-bundle-analyzer": "^3.1.0",
    "webpack-cli": "^3.3.0",
    "webpack-dev-server": "^3.2.1",
    "webpack-merge": "^4.2.1",
    "webpack-node-externals": "^1.7.2"
  },
  "dependencies": {
    "@blueprintjs/core": "^3.19.1",
    "@fortawesome/fontawesome-free": "^5.8.1",
    "@hot-loader/react-dom": "^16.8.6",
    "about-window": "^1.13.1",
    "connected-react-router": "^6.3.2",
    "core-js": "2",
    "devtron": "^1.4.0",
    "electron-debug": "^2.1.0",
    "electron-icon-maker": "^0.0.4",
    "electron-log": "^3.0.4",
    "electron-photon": "^1.1.6",
    "electron-react-devtools": "^0.5.3",
    "electron-updater": "^4.0.6",
    "fancy-input": "^1.3.3",
    "fast-average-color": "^5.2.1",
    "fs-jetpack": "^2.2.3",
    "history": "^4.9.0",
    "magic.css": "^1.4.1",
    "node-ssh": "^6.0.0",
    "ntl": "^4.0.0",
    "react": "^16.8.6",
    "react-dom": "^16.8.6",
    "react-hot-loader": "^4.8.2",
    "react-photonkit": "^0.4.1",
    "react-redux": "^7.1.0",
    "react-router": "^5.0.0",
    "react-router-dom": "^5.0.0",
    "redux": "^4.0.1",
    "redux-devtools-extension": "^2.13.8",
    "redux-thunk": "^2.3.0",
    "sass": "^1.23.1",
    "source-map-support": "^0.5.11"
  },
  "resolutions": {
    "@octokit/rest": "16.33.1"
  },
  "devEngines": {
    "node": ">=12.x",
    "npm": ">=4.x",
    "yarn": ">=1.16.3"
  },
  "browserslist": "electron 1.6",
  "husky": {
    "hooks": {
      "pre-commit": "echo 'lint-staged'",
      "pre-push": "yarn test --passWithNoTests && yarn check-deps",
      "commit-msg": ""
    }
  }
}
